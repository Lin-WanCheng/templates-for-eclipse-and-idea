<templateSet group="Lwc Java">
  <template name="test" value="@org.junit.Test&#10;public void $name$Test() throws Exception{&#10;    $END$&#10;}" description="test" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="try" value="try {&#10;    $SELECTION$$END$&#10;} catch (Exception e) {&#10;    e.printStackTrace();&#10;}" description="try { } catch (Exception e) { e.printStackTrace(); }" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="doc" value="/** $SELECTION$ */$END$" description="/**  */" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="Ip" value="Integer.parseInt($SELECTION$)$END$" description="Integer.parseInt" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="fore" value="for ($Type$ $VAR$ : $VARS$) {&#10;    $END$&#10;}" description="for ( : )  { }" toReformat="true" toShortenFQNames="true">
    <variable name="VARS" expression="iterableVariable()" defaultValue="iterableVariable()" alwaysStopAt="true" />
    <variable name="Type" expression="iterableComponentType(VARS)" defaultValue="" alwaysStopAt="false" />
    <variable name="VAR" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="hr" value="/* ******************* $text$ ******************* */" description="/* ******************* $comm$ ******************* */ 左右各20个*" toReformat="false" toShortenFQNames="true">
    <variable name="text" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="rts" value="// Long类型会出现异常信息&#10;redisTemplate.setKeySerializer(new org.springframework.data.redis.serializer.StringRedisSerializer());&#10;redisTemplate.setValueSerializer(new org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer(Object.class));&#10;redisTemplate.setHashValueSerializer(new org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer(Object.class));" description="redisTemplate.set~Serializer" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="lm" value="java.util.List&lt;java.util.Map&lt;String, $Object$&gt;&gt; " description="List&lt;Map&lt;String, Object&gt;&gt;" toReformat="true" toShortenFQNames="true">
    <variable name="Object" expression="" defaultValue="&quot;Object&quot;" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="thre" value="throw new RuntimeException(e);" description="throw RuntimeException(e);" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tryt" value="try {&#10;    $SELECTION$$END$&#10;} catch (Exception e) {&#10;    throw new RuntimeException(e);&#10;}" description="try { } catch (Exception e) { throw new RuntimeException(e); }" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="mapnew" value="java.util.Map&lt;String, $Object$&gt; map = new java.util.HashMap&lt;&gt;();" description="Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();" toReformat="true" toShortenFQNames="true">
    <variable name="Object" expression="" defaultValue="&quot;Object&quot;" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="mp" value="$map$.put(&quot;$name$&quot;, $obj$);" description="map.put(&quot;var&quot;, var)" toReformat="false" toShortenFQNames="true">
    <variable name="map" expression="variableOfType(&quot;java.util.Map&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="obj" expression="suggestFirstVariableName(&quot;Object&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="name" expression="obj" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="pl" value="&quot; + $var$ + &quot;" description="&quot; + var + &quot;" toReformat="true" toShortenFQNames="true">
    <variable name="var" expression="suggestFirstVariableName(&quot;Object&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STRING" value="true" />
    </context>
  </template>
  <template name="pc" value="private $Type$() {}" description="构造函数私有" toReformat="false" toShortenFQNames="true">
    <variable name="Type" expression="qualifiedClassName()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="sdf" value="java.text.SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);" description="SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="pat" value="java.util.regex.Pattern $p$_PATTERN = Pattern.compile(&quot;$regexp$&quot;);" description="Pattern $p$ = Pattern.compile(&quot;$regexp$&quot;);" toReformat="false" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="regexp" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="mat" value="java.util.regex.Matcher m = $pattern$.matcher(&quot;$str$&quot;);&#10;while (m.find()) {&#10;    String s = m.group($g$);&#10;    $END$&#10;}" description="matcher group" toReformat="true" toShortenFQNames="true">
    <variable name="pattern" expression="variableOfType(&quot;java.util.regex.Pattern&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="str" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="g" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
    </context>
  </template>
</templateSet>